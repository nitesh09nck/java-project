name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:

  build-java:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up JDK 17 with Maven caching
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      # Step 3: Build project with Maven (skip tests first if needed)
      - name: Build with Maven
        run: mvn clean package -DskipTests

      # Step 4: Run tests
      - name: Run tests
        run: mvn test

      # Step 5: Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 6: Build Docker image
      - name: Build Docker image
        run: docker build -t nitesh09nck/java-project:${{ github.sha }} .

      # Step 7: Push Docker image
      - name: Push Docker image
        run: docker push nitesh09nck/java-project:${{ github.sha }}

      # Step 8: Deploy to Kubernetes (optional)
      # Ensure you have set KUBECONFIG as a secret if you want this to run
      - name: Deploy to Kubernetes
        if: ${{ secrets.KUBECONFIG }}
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml

